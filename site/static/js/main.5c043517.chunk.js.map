{"version":3,"sources":["components/dashboard/ActionButtons.tsx","context/ChartContext.ts","components/dashboard/DonutChart.tsx","models/CovidDataModel.ts","components/shared/CovidDataForm.tsx","services/messages/SocialInteractionResponse.ts","config.ts","services/SocialInteractionService.ts","store/SocialInteraction/SocialInteractionActions.ts","store/SocialInteraction/ActionTypes.ts","store/DateRange/ActionTypes.ts","shared/date-range.ts","store/DateRange/DateRangeState.ts","hooks/useDateRange.ts","store/DateRange/DateRangeActions.ts","hooks/useSocialInteraction.ts","services/messages/VisitedPlacesResponse.ts","services/VisitedPlacesService.ts","store/VisitedPlaces/VisitedPlaceActions.ts","store/VisitedPlaces/ActionTypes.ts","hooks/useVisitedPlace.ts","components/dashboard/Dashboard.tsx","components/layout/DateRangeSelector/DateRangeButton.tsx","components/layout/DateRangeSelector/DateRangeDialog.tsx","components/layout/DateRangeSelector/DateRangeSelector.tsx","components/layout/NotificationAlerts.tsx","services/ResetService.ts","hooks/useReset.ts","components/layout/ResetDataDialog.tsx","components/layout/Header.tsx","components/not-found/NotFound.tsx","components/overview/ExposureIncidents.tsx","components/overview/ViewModeButton.tsx","components/overview/OverviewChart.tsx","shared/overview-data-helper.ts","components/overview/Overview.tsx","shared/group-data-helper.ts","components/shared/CovidDataDeleteDialog.tsx","context/TableContext.ts","components/shared/CovidDataRowGroupDetails.tsx","components/shared/CovidDataRowGroupHeader.tsx","components/shared/CovidDataRowGroup.tsx","components/shared/CovidDataTable.tsx","components/shared/CovidDataAddButton.tsx","components/shared/CovidDataEmptyTable.tsx","components/social-interactions/SocialInteractions.tsx","components/visited-places/VisitedPlaces.tsx","App.tsx","serviceWorker.ts","store/DateRange/DateRangeReducer.ts","store/SocialInteraction/SocialInteractionState.ts","store/SocialInteraction/SocialInteractionReducer.ts","store/VisitedPlaces/VisitedPlaceState.ts","store/VisitedPlaces/VisitedPlaceReducer.ts","store/store.ts","index.tsx"],"names":["ActionButton","props","text","count","icon","onClick","className","Fab","color","ChartContext","React","createContext","chartValues","value","setChartValues","PointComponentOverride","argument","useContext","Point","DonutChart","data","linkPath","useState","useEffect","initialData","displayText","displayValue","Provider","Paper","width","height","valueField","argumentField","innerRadius","outerRadius","pointComponent","position","to","CovidDataModel","id","name","date","hours","isExposed","this","CovidDataForm","open","dialogTitle","handleClose","saveCallback","nameDisplayText","exposureDisplayText","initialValue","nameOptions","setName","Date","setDate","setHours","exposed","setExposed","nameError","setNameError","handleChangeName","event","target","trim","dateError","setDateError","hoursError","setHoursError","filterOptions","createFilterOptions","matchFrom","limit","Dialog","onClose","disableBackdropClick","scroll","DialogTitle","DialogContent","Autocomplete","freeSolo","options","inputValue","renderInput","params","TextField","error","helperText","label","type","onChange","margin","format","moment","toDate","FormControlLabel","control","Checkbox","checked","DialogActions","Button","disabled","SocialInteractionResponse","_id","isSocialDistancing","environment","apiUrl","url","config","getInteractions","a","axios","get","promise","response","plainToClass","map","r","postInteraction","request","post","deleteInteraction","delete","putInteraction","put","FetchInteraction","dispatch","then","payload","interactions","PostInteraction","interaction","startOf","AddInteraction","RemoveInteraction","interactionId","DeleteInteraction","SaveInteraction","UpdateInteraction","UPDATE_RANGE","LAST_SEVEN_DAYS","ALL_TIME","TODAY","MONTH","YEAR","CUSTOM_DATE","initialState","dateRange","endDate","endOf","startDate","subtract","range","display","useDateRange","currentDateRange","useSelector","state","dateRangeReducer","useDispatch","lastSevenDays","today","ranges","lastTwoWeeks","month","actions","year","customDate","useSocialInteraction","socialInteractionReducer","totalInteractions","loading","setInteractions","hasInteractionExposure","setHasInteractionExposure","interactionOptions","setInteractionOptions","filteredInteractions","filter","i","exposure","some","fetchInteractions","addInteraction","updateInteraction","VisitedPlacesResponse","place","isCrowded","getPlaces","savePlace","deletePlace","putPlace","FetchPlace","places","PostPlace","AddPlace","RemovePlace","placeId","DeletePlace","SavePlace","UpdatePlace","useVisitedPlace","visitedPlaceReducer","totalPlaces","setPlaces","hasPlaceExposure","setHasPlaceExposure","placeOptions","setPlaceOptions","filteredPlaces","p","fetchPlaces","addPlace","Dashboard","isInteractionsActive","setIsInteractionsActive","title","formDetails","setFormDetails","setOptions","summary","setSummary","redirectPath","setRedirectPath","length","setOpen","DateRangeButton","selected","handleDateRangeClick","dangerouslySetInnerHTML","__html","useStyles","makeStyles","center","textAlign","DateRangeDialog","handleCloseDialog","classes","buttons","handleClick","setViews","setMode","setOpenDatePicker","openDatePicker","views","mode","b","key","DatePicker","TextFieldComponent","DateRangeSelector","NotificationAlerts","Alert","severity","AlertTitle","ResetData","useReset","resetData","root","ResetDataDialog","autoFocus","Header","navigationValue","setNavigationValue","openAlerts","setOpenAlerts","openResetDialog","setOpenResetDialog","history","useHistory","pathname","useLocation","interactionsLoading","placesLoading","badgeCount","setBadgeCount","undefined","indeterminate","AppBar","Toolbar","Typography","variant","IconButton","Badge","badgeContent","BottomNavigation","newValue","showLabels","BottomNavigationAction","push","LinearProgress","NotFound","ExposureIncidents","totalCount","setTotalCount","exposedInteractions","exposedPlaces","ViewModeButton","buttonClass","isActive","OverviewChart","scaleName","stacks","series","getDivider","summarize","divisionUnit","baseDate","overview","model","d","notExposed","index","dayStart","dayEnd","exposures","e","unshift","daysInMonth","lastDayOfMonth","lastDayOfYear","Overview","setOverview","groupData","dateGroups","_","groupedDataModel","Object","keys","forEach","k","CovidDataDeleteDialog","deleteCallback","DialogContentText","TableContext","deleteDataCallback","updateDataCallback","useActionStyles","useRowStyles","verticalAlign","CovidDataRowGroupDetails","actionClasses","rowClasses","detail","openDeleteDialog","setOpenDeleteDialog","openUpdateDialog","setOpenUpdateDialog","TableRow","TableCell","style","size","aria-label","disableRipple","disableFocusRipple","useHeaderRowStyles","backgroundColor","boxShadow","borderBottom","marginTop","useHeaderCellStyles","padding","CovidDataRowGroupHeader","headerRowClasses","headerCellClasses","headerDate","colSpan","CovidDataRowGroup","groupedData","details","useFooterRowStyles","CovidDataTable","pagination","rowsPerPageCallback","pageCallback","rowsPerPage","page","footerClasses","autoHide","Table","TableBody","TableFooter","TablePagination","rowsPerPageOptions","onChangePage","newPage","handlePageChange","onChangeRowsPerPage","theme","extendedIcon","marginRight","spacing","CovidDataAddButton","addDisplayText","onAddClick","CovidDataEmptyTable","children","SocialInteractions","groupedInteractions","setGroupedInteractions","setLength","setPage","take","setTake","setNameOptions","currentPage","slice","sort","getTime","contextValues","VisitedPlaces","groupedPlaces","setGroupedPlaces","App","exact","path","component","Boolean","window","location","hostname","match","reducer","action","reducers","combineReducers","DateRangeReducer","SocialInteractionReducer","VisitedPlaceReducer","ReactDOM","render","store","createStore","applyMiddleware","thunk","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5c043517.chunk.js","sourcesContent":["import { Fab } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport './ActionButtons.scss';\r\n\r\ntype Props = {\r\n  text: string;\r\n  count: number;\r\n  icon: React.ReactNode;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ActionButton: React.FC<Props> = (props: Props) => {\r\n  const { text, count, icon, onClick} = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"action-button\">\r\n        <div className=\"action-text\">{text}</div>\r\n        <Fab color=\"secondary\" onClick={onClick}>\r\n          {icon}\r\n        </Fab>\r\n        <div className=\"action-count\">{count}</div>\r\n      </div>\r\n    </>\r\n  )  \r\n}\r\n\r\nexport default ActionButton;","import React from \"react\"\r\n\r\ntype ChartContextProps = {\r\n  chartValues: {\r\n    text: string,\r\n    value: number\r\n  },\r\n  setChartValues: any\r\n}\r\n\r\nexport const ChartContext = React.createContext<ChartContextProps>(\r\n  {\r\n    chartValues: {\r\n      text: '',\r\n      value: 0,\r\n    },\r\n    setChartValues: () => {}\r\n  }\r\n);","import { Chart, Legend, PieSeries } from '@devexpress/dx-react-chart-material-ui';\r\nimport { Animation } from '@devexpress/dx-react-chart';\r\nimport { Paper } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport './DonutChart.scss';\r\nimport { SummarizedCovidDataModel } from '../../models/SummarizedCovidDataModel';\r\nimport { ChartContext } from '../../context/ChartContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PointComponentOverride: React.FC<PieSeries.PointProps> = (props: PieSeries.PointProps) => {\r\n  const { argument, value } = props;\r\n  \r\n  const { setChartValues } = useContext(ChartContext);\r\n  const handleSeriesClick = () => {\r\n    setChartValues({\r\n      text: argument,\r\n      value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PieSeries.Point\r\n        {...props}\r\n        onClick={handleSeriesClick}\r\n        className={`${argument === 'Exposed' ? 'exposed-series' : 'not-exposed-series' }`}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\ntype Props = {\r\n  data: SummarizedCovidDataModel[];\r\n  linkPath: string;\r\n}\r\n\r\nconst DonutChart: React.FC<Props> = (props: Props) => {\r\n  const { data, linkPath } = props;\r\n  const [chartValues, setChartValues] = useState({\r\n    text: '',\r\n    value: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const initialData = data[0];\r\n    setChartValues({\r\n      text: initialData.displayText,\r\n      value: initialData.displayValue\r\n    });\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      \r\n    }\r\n  })\r\n\r\n  const value = { chartValues, setChartValues };\r\n\r\n  return (\r\n    <>\r\n      <ChartContext.Provider value={value}>\r\n        <div className=\"chart-container\">\r\n          <Paper>\r\n            <Chart\r\n              data={data}\r\n              width={300}\r\n              height={300}\r\n            >\r\n              <PieSeries\r\n                valueField=\"displayValue\"\r\n                argumentField=\"displayText\"\r\n                innerRadius={0.8}\r\n                outerRadius={1}\r\n                pointComponent={PointComponentOverride}\r\n              />\r\n\r\n              <Legend position=\"bottom\"  />\r\n              <Animation />\r\n            </Chart>\r\n          </Paper>\r\n        </div>\r\n        <div className=\"series-values\">\r\n          <div className=\"series-value\">{chartValues.value}</div>\r\n          <div className=\"series-name\">{chartValues.text}</div>\r\n          <Link to={linkPath} className=\"series-link\">View All</Link>\r\n        </div>\r\n      </ChartContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DonutChart;","export class CovidDataModel {\r\n  id: string;\r\n  name: string;\r\n  date: Date;\r\n  hours: number;\r\n  isExposed: boolean;\r\n\r\n  constructor(id: string, name: string, date: Date, hours: number, isExposed: boolean) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.date = date;\r\n    this.hours = hours;\r\n    this.isExposed = isExposed;\r\n  }\r\n}","import { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CovidDataModel } from \"../../models/CovidDataModel\";\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport './CovidDataForm.scss';\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  handleClose?: () => void;\r\n  dialogTitle: string;\r\n  nameDisplayText: string;\r\n  exposureDisplayText: string;\r\n  saveCallback: (data: CovidDataModel) => void;\r\n  initialValue?: CovidDataModel;\r\n  nameOptions: string[];\r\n}\r\n\r\nconst CovidDataForm: React.FC<Props> = (props: Props) => {\r\n  const { \r\n    open, \r\n    dialogTitle, \r\n    handleClose, \r\n    saveCallback, \r\n    nameDisplayText, \r\n    exposureDisplayText,\r\n    initialValue,\r\n    nameOptions\r\n  } = props;\r\n\r\n  const [name, setName] = useState('');\r\n  const [date, setDate] = useState(new Date());\r\n  const [hours, setHours] = useState(0);\r\n  const [exposed, setExposed] = useState(false);\r\n\r\n  const [nameError, setNameError] = useState(false);\r\n  const handleChangeName = (event) => {\r\n    setNameError(event.target.value.trim() === '')\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const [dateError, setDateError] = useState(false);\r\n  const handleChangeDate = (event) => {\r\n    if (!event || moment(event).toDate() > moment().toDate()) {\r\n      setDateError(true);\r\n    } else {\r\n      setDateError(false);\r\n    }\r\n    setDate(event);\r\n  }\r\n\r\n  const [hoursError, setHoursError] = useState(false);\r\n  const handleChangeHours = (event) => {\r\n    setHoursError(+event.target.value < 1);\r\n    setHours(+event.target.value);\r\n  }\r\n\r\n  const handleSave = () => {\r\n    saveCallback(new CovidDataModel('', name, date, hours, exposed));\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (initialValue) {\r\n        setName(initialValue.name);\r\n        setDate(initialValue.date);\r\n        setHours(initialValue.hours);\r\n        setExposed(initialValue.isExposed);\r\n      } else {\r\n        setName('');\r\n        setDate(new Date());\r\n        setHours(0);\r\n        setExposed(false);\r\n      }\r\n\r\n      setNameError(false);\r\n      setHoursError(false);\r\n      setDateError(false);\r\n    }\r\n  }, [open, initialValue])\r\n\r\n  const filterOptions = createFilterOptions({\r\n    matchFrom: 'start',\r\n    limit: 5\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} disableBackdropClick={true} scroll=\"body\" >\r\n        <DialogTitle>{dialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"form-container\">\r\n            <div className=\"form-control\">\r\n              <Autocomplete\r\n                freeSolo\r\n                options={nameOptions}\r\n                filterOptions={filterOptions}\r\n                inputValue={name}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    { ...params }\r\n                    error={nameError}\r\n                    helperText={nameError ? `${nameDisplayText} is required` : ''}\r\n                    label={nameDisplayText}\r\n                    type=\"text\"\r\n                    onChange={handleChangeName}\r\n                  />\r\n                )}\r\n              />\r\n              \r\n            </div>\r\n            <div className=\"form-control\">\r\n              <KeyboardDatePicker\r\n                error={dateError}\r\n                helperText={dateError ? 'Invalid Date' : ''}\r\n                margin=\"normal\"\r\n                label=\"Date\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={date}\r\n                onChange={handleChangeDate}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <TextField\r\n                error={hoursError}\r\n                helperText={hoursError ? 'Hours should be greater than 0' : ''}\r\n                label=\"Hours\"\r\n                type=\"number\"\r\n                value={hours}\r\n                onChange={handleChangeHours}\r\n              />\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={exposed}\r\n                    onChange={() => setExposed(!exposed)}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={exposureDisplayText}\r\n              />\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            disabled={nameError || dateError || hoursError || name.trim() === '' || hours < 1}\r\n            onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataForm;","export class SocialInteractionResponse {\r\n  _id: string;\r\n  name: string;\r\n  date: Date;\r\n  hours: number;\r\n  isSocialDistancing: boolean;\r\n}","const environment = {\r\n  development: {\r\n    apiUrl: \"http://localhost:5000\"\r\n  },\r\n  production: {\r\n    apiUrl: \"https://don-covid-tracker-api.herokuapp.com\"\r\n  }\r\n}\r\n\r\nexport default environment[process.env.NODE_ENV];","import { SocialInteractionPostRequest } from './messages/SocialInteractionPostRequest';\r\nimport { SocialInteractionResponse } from './messages/SocialInteractionResponse';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { CovidDataModel } from './../models/CovidDataModel';\r\nimport { plainToClass } from 'class-transformer';\r\nimport config from '../config';\r\n\r\nconst url = `${config.apiUrl}/api/social-interactions`;\r\n\r\nexport const getInteractions = async (): Promise<CovidDataModel[]> => {\r\n  const promise: AxiosResponse<any[]> = await axios.get(url);\r\n  const response: SocialInteractionResponse[] = plainToClass(SocialInteractionResponse, promise.data);\r\n  \r\n  return response.map(r => new CovidDataModel(r._id, r.name, r.date, r.hours, !r.isSocialDistancing));\r\n}\r\n\r\nexport const postInteraction = async (request: SocialInteractionPostRequest): Promise<CovidDataModel> => {\r\n  const promise: AxiosResponse<any> = await axios.post(url, request);\r\n  const response: SocialInteractionResponse = plainToClass(SocialInteractionResponse, promise.data);\r\n\r\n  return new CovidDataModel(response._id, response.name, response.date, response.hours, !response.isSocialDistancing);\r\n}\r\n\r\nexport const deleteInteraction = async (id: string): Promise<boolean> => {\r\n  await axios.delete(`${url}/${id}`);\r\n  \r\n  return true;\r\n}\r\n\r\nexport const putInteraction = async (request: SocialInteractionPostRequest, id: string): Promise<CovidDataModel> => {\r\n  const promise: AxiosResponse<any> = await axios.put(`${url}/${id}`, request);\r\n  const response: SocialInteractionResponse = plainToClass(SocialInteractionResponse, promise.data);\r\n\r\n  return new CovidDataModel(response._id, response.name, response.date, response.hours, !response.isSocialDistancing);\r\n}","import { putInteraction } from './../../services/SocialInteractionService';\r\nimport { CovidDataModel } from './../../models/CovidDataModel';\r\nimport { Dispatch, Action } from \"redux\";\r\nimport { deleteInteraction, getInteractions, postInteraction } from \"../../services/SocialInteractionService\";\r\nimport * as actions from \"./ActionTypes\";\r\nimport { CustomAction } from \"./CustomAction\";\r\nimport { SocialInteractionPostRequest } from '../../services/messages/SocialInteractionPostRequest';\r\nimport moment from 'moment';\r\n\r\nexport function FetchInteraction() {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(FetchInteractionsRequest());\r\n    getInteractions()\r\n      .then(r => dispatch(FetchInteractions(r)))\r\n  }\r\n}\r\n\r\nfunction FetchInteractionsRequest(): Action {\r\n  return {\r\n    type: actions.FETCH_INTERACTIONS_REQUEST\r\n  };\r\n}\r\n\r\nfunction FetchInteractions(interactions: CovidDataModel[]): CustomAction {\r\n  return {\r\n    type: actions.FETCH_INTERACTIONS,\r\n    payload: {\r\n      interactions: interactions\r\n    }\r\n  }\r\n}\r\n\r\nexport function PostInteraction(interaction: CovidDataModel) {\r\n  const request: SocialInteractionPostRequest = {\r\n    date: moment(interaction.date).startOf('day').toDate(),\r\n    hours: interaction.hours,\r\n    isSocialDistancing: !interaction.isExposed,\r\n    name: interaction.name\r\n  }\r\n\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(PostInteractionRequest());\r\n    postInteraction(request)\r\n      .then(r => dispatch(AddInteraction(r)));\r\n  }\r\n}\r\n\r\nfunction PostInteractionRequest(): Action {\r\n  return {\r\n    type: actions.ADD_INTERACTIONS_REQUEST\r\n  }\r\n}\r\n\r\nfunction AddInteraction(interaction: CovidDataModel): CustomAction {\r\n  return {\r\n    type: actions.ADD_INTERACTION,\r\n    payload: {\r\n      interaction: interaction\r\n    }\r\n  }\r\n}\r\n\r\nexport function RemoveInteraction(id: string) {\r\n  return function (dispatch: Dispatch<any>) {\r\n    dispatch(DeleteInteractionRequest());\r\n    deleteInteraction(id)\r\n      .then(r => dispatch(DeleteInteraction(id)))\r\n  }\r\n}\r\n\r\nfunction DeleteInteractionRequest(): Action {\r\n  return {\r\n    type: actions.REMOVE_INTERACTION_REQUEST\r\n  }\r\n}\r\n\r\nfunction DeleteInteraction(id: string): CustomAction {\r\n  return {\r\n    type: actions.REMOVE_INTERACTION,\r\n    payload: {\r\n      interactionId: id\r\n    }\r\n  }\r\n}\r\n\r\nexport function SaveInteraction(interaction: CovidDataModel) {\r\n  const request: SocialInteractionPostRequest = {\r\n    date: moment(interaction.date).startOf('day').toDate(),\r\n    hours: interaction.hours,\r\n    isSocialDistancing: !interaction.isExposed,\r\n    name: interaction.name\r\n  }\r\n\r\n  return function (dispatch: Dispatch<any>) {\r\n    dispatch(UpdateInteractionRequest());\r\n    putInteraction(request, interaction.id)\r\n      .then(r => dispatch(UpdateInteraction(r)))\r\n  }\r\n}\r\n\r\nfunction UpdateInteractionRequest(): Action {\r\n  return {\r\n    type: actions.UPDATE_INTERACTION_REQUEST\r\n  }\r\n}\r\n\r\nfunction UpdateInteraction(interaction: CovidDataModel): CustomAction {\r\n  return {\r\n    type: actions.UPDATE_INTERACTION,\r\n    payload: {\r\n      interaction\r\n    }\r\n  }\r\n}\r\n\r\nexport function ResetInteractionRequest(): Action {\r\n  return {\r\n    type: actions.RESET_DATA_REQUEST\r\n  }\r\n}\r\n\r\nexport function ResetInteractoin(): Action {\r\n  return {\r\n    type: actions.RESET_DATA\r\n  }\r\n}","const FETCH_INTERACTIONS_REQUEST = 'Fetch Interactions Request';\r\nconst FETCH_INTERACTIONS = 'Fetch Social Interactions';\r\n\r\nconst ADD_INTERACTIONS_REQUEST = 'Add Interaction Request';\r\nconst ADD_INTERACTION = 'Add Social Interaction';\r\n\r\nconst UPDATE_INTERACTION_REQUEST = 'Update Interaction Request';\r\nconst UPDATE_INTERACTION = 'Update Social Interaction';\r\n\r\nconst REMOVE_INTERACTION_REQUEST = 'Remove Interaction Request';\r\nconst REMOVE_INTERACTION = 'Remove Social Interaction';\r\n\r\nconst RESET_DATA_REQUEST = 'Reset Interaction Data Request';\r\nconst RESET_DATA = 'Reset Interaction';\r\n\r\nexport {\r\n  FETCH_INTERACTIONS_REQUEST,\r\n  FETCH_INTERACTIONS,\r\n  ADD_INTERACTIONS_REQUEST,\r\n  ADD_INTERACTION,\r\n  UPDATE_INTERACTION_REQUEST,\r\n  UPDATE_INTERACTION,\r\n  REMOVE_INTERACTION_REQUEST,\r\n  REMOVE_INTERACTION,\r\n  RESET_DATA_REQUEST,\r\n  RESET_DATA\r\n};","const UPDATE_RANGE = 'Update Date Range';\r\n\r\nexport {\r\n  UPDATE_RANGE\r\n};","interface DateRange {\r\n  range: string;\r\n  icon: string;\r\n};\r\n\r\nconst LAST_SEVEN_DAYS: DateRange = {\r\n  range: 'Last 7 Days',\r\n  icon: '7'\r\n};\r\nconst ALL_TIME: DateRange = {\r\n  range: 'Last 14 Days',\r\n  icon: '14'\r\n};\r\nconst TODAY: DateRange = {\r\n  range: 'Today',\r\n  icon: 'T'\r\n};\r\nconst MONTH: DateRange =  {\r\n  range: 'Month',\r\n  icon: 'M'\r\n};\r\nconst YEAR: DateRange = {\r\n  range: 'Year',\r\n  icon: 'Y'\r\n};\r\nconst CUSTOM_DATE: DateRange = {\r\n  range: 'Custom Date',\r\n  icon: 'S'\r\n};\r\n\r\nexport {\r\n  LAST_SEVEN_DAYS,\r\n  ALL_TIME,\r\n  TODAY,\r\n  MONTH,\r\n  YEAR,\r\n  CUSTOM_DATE\r\n};\r\n","import { DateRange } from './DateRange';\r\nimport moment from \"moment\";\r\nimport { LAST_SEVEN_DAYS } from \"../../shared/date-range\";\r\n\r\nexport interface DateRangeState {\r\n  dateRange: DateRange\r\n}\r\n\r\nexport const initialState: DateRangeState = {\r\n  dateRange: {\r\n    endDate: moment().endOf('day').toDate(),\r\n    startDate: moment().subtract(6, 'days').startOf('day').toDate(),\r\n    range: LAST_SEVEN_DAYS.range,\r\n    display: moment().subtract(6, 'days').startOf('day').format('MM/DD/yyyy') + ' - ' + moment().endOf('day').format('MM/DD/yyyy'),\r\n    icon: LAST_SEVEN_DAYS.icon\r\n  }\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateRange } from '../store/DateRange/DateRange';\r\nimport * as actions from '../store/DateRange/DateRangeActions';\r\n\r\nconst useDateRange = () => {\r\n  const currentDateRange = useSelector<any>(\r\n    (state) => state.dateRangeReducer.dateRange\r\n  ) as DateRange;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const lastSevenDays = () => {\r\n    dispatch(actions.setToLastSevenDays());\r\n  }\r\n\r\n  const today = () => {\r\n    dispatch(actions.setToToday())\r\n  }\r\n  \r\n  const lastTwoWeeks = () => {\r\n    dispatch(actions.setToTwoWeeks())\r\n  }\r\n\r\n  const month = (date: Date) => {\r\n    dispatch(actions.setToMonth(date));\r\n  }\r\n\r\n  const year = (date: Date) => {\r\n    dispatch(actions.setToYear(date));\r\n  }\r\n\r\n  const customDate = (date: Date) => {\r\n    dispatch(actions.setCustomDate(date));\r\n  }\r\n\r\n  return {\r\n    currentDateRange,\r\n    lastSevenDays,\r\n    today,\r\n    lastTwoWeeks,\r\n    month,\r\n    year,\r\n    customDate\r\n  };\r\n}\r\n\r\nexport default useDateRange;","import { UPDATE_RANGE } from './ActionTypes';\r\nimport { CustomAction } from './CustomAction';\r\nimport { DateRange } from './DateRange';\r\nimport { initialState } from './DateRangeState';\r\nimport moment from \"moment\";\r\nimport * as ranges from '../../shared/date-range';\r\n\r\nexport function setToLastSevenDays(): CustomAction {\r\n  return {\r\n    payload: initialState,\r\n    type: UPDATE_RANGE\r\n  };\r\n}\r\n\r\nexport function setToToday(): CustomAction {\r\n  const dateRange: DateRange = {\r\n    startDate: moment().startOf('day').toDate(),\r\n    endDate: moment().endOf('day').toDate(),\r\n    icon: ranges.TODAY.icon,\r\n    range: ranges.TODAY.range,\r\n    display: moment().format('MM/DD/yyyy')\r\n  };\r\n\r\n  return {\r\n    payload: {\r\n      dateRange\r\n    },\r\n    type: UPDATE_RANGE\r\n  };\r\n}\r\n\r\nexport function setToTwoWeeks(): CustomAction {\r\n  const dateRange: DateRange = {\r\n    startDate: moment().subtract(13, 'days').startOf('day').toDate(),\r\n    endDate: moment().endOf('day').toDate(),\r\n    icon: ranges.ALL_TIME.icon,\r\n    range: ranges.ALL_TIME.range,\r\n    display: moment().subtract(13, 'days').startOf('day').format('MM/DD/yyyy') + ' - ' + moment().endOf('day').format('MM/DD/yyyy')\r\n  };\r\n\r\n  return {\r\n    payload: {\r\n      dateRange\r\n    },\r\n    type: UPDATE_RANGE\r\n  };\r\n}\r\n\r\nexport function setToMonth(date: Date): CustomAction {\r\n  const dateRange: DateRange = {\r\n    startDate: moment(date).startOf('month').startOf('day').toDate(),\r\n    endDate: moment(date).endOf('month').endOf('day').toDate(),\r\n    icon: ranges.MONTH.icon,\r\n    range: ranges.MONTH.range,\r\n    display: moment(date).format('MMMM yyyy')\r\n  };\r\n\r\n  return {\r\n    payload: {\r\n      dateRange\r\n    },\r\n    type: UPDATE_RANGE\r\n  };\r\n}\r\n\r\nexport function setToYear(date: Date): CustomAction {\r\n  const dateRange: DateRange = {\r\n    startDate: moment(date).startOf('year').startOf('day').toDate(),\r\n    endDate: moment(date).endOf('year').endOf('day').toDate(),\r\n    icon: ranges.YEAR.icon,\r\n    range: ranges.YEAR.range,\r\n    display: moment(date).format('yyyy')\r\n  };\r\n\r\n  return {\r\n    payload: {\r\n      dateRange\r\n    },\r\n    type: UPDATE_RANGE\r\n  };\r\n}\r\n\r\nexport function setCustomDate(date: Date): CustomAction {\r\n  const dateRange: DateRange = {\r\n    startDate: moment(date).startOf('day').toDate(),\r\n    endDate: moment(date).endOf('day').toDate(),\r\n    icon: ranges.CUSTOM_DATE.icon,\r\n    range: ranges.CUSTOM_DATE.range,\r\n    display: moment(date).format('MMMM DD yyyy')\r\n  };\r\n\r\n  return {\r\n    payload: {\r\n      dateRange\r\n    },\r\n    type: UPDATE_RANGE\r\n  };\r\n}","import { CovidDataModel } from './../models/CovidDataModel';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FetchInteraction, PostInteraction, RemoveInteraction, SaveInteraction } from \"../store/SocialInteraction/SocialInteractionActions\";\r\nimport { useState } from 'react';\r\nimport useDateRange from './useDateRange';\r\nimport { SocialInteractionState } from '../store/SocialInteraction/SocialInteractionState';\r\nimport moment from 'moment';\r\n\r\nconst useSocialInteraction = () => {\r\n  const state = useSelector<any>(\r\n    (state) => {\r\n      const reducerState = state.socialInteractionReducer as SocialInteractionState;\r\n\r\n      return reducerState;\r\n    }\r\n  ) as SocialInteractionState;\r\n\r\n  const { interactions: totalInteractions, loading } = state;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [interactions, setInteractions] = useState(totalInteractions);\r\n  const [hasInteractionExposure, setHasInteractionExposure] = useState(false);\r\n  const [interactionOptions, setInteractionOptions] = useState<string[]>([]);\r\n  const { currentDateRange } = useDateRange();\r\n\r\n  useEffect(() => {\r\n    const filteredInteractions = totalInteractions.filter(i => new Date(i.date) >= currentDateRange.startDate &&\r\n                                                          new Date(i.date) <= currentDateRange.endDate);\r\n\r\n    setInteractions(filteredInteractions);\r\n\r\n    const startDate = moment().subtract(13, 'days').startOf('day').toDate();\r\n    const endDate = moment().endOf('day').toDate();\r\n\r\n    const exposure = totalInteractions.some(i => new Date(i.date) >= startDate &&\r\n                                              new Date(i.date) <= endDate && \r\n                                              i.isExposed)\r\n    setHasInteractionExposure(exposure);\r\n\r\n    setInteractionOptions(totalInteractions.map(i => i.name));\r\n  }, [totalInteractions, currentDateRange]);\r\n  \r\n  const fetchInteractions = () => {\r\n    dispatch(FetchInteraction());\r\n  }\r\n\r\n  const addInteraction = (data: CovidDataModel) => {\r\n    dispatch(PostInteraction(data))\r\n  }\r\n\r\n  const deleteInteraction = (id: string) => {\r\n    dispatch(RemoveInteraction(id));\r\n  }\r\n\r\n  const updateInteraction = (interaction: CovidDataModel) => {\r\n    dispatch(SaveInteraction(interaction))\r\n  }\r\n\r\n  return {\r\n    interactions,\r\n    loading,\r\n    fetchInteractions,\r\n    addInteraction,\r\n    deleteInteraction,\r\n    updateInteraction,\r\n    hasInteractionExposure,\r\n    interactionOptions\r\n  }\r\n}\r\n\r\nexport default useSocialInteraction;","export class VisitedPlacesResponse {\r\n\t_id: string;\r\n\tplace: string;\r\n\tdate: Date;\r\n\thours: number;\r\n\tisCrowded: boolean;\r\n}","import { VisitedPlacePostRequest } from './messages/VisitedPlacePostRequest';\r\nimport { VisitedPlacesResponse } from './messages/VisitedPlacesResponse';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { CovidDataModel } from './../models/CovidDataModel';\r\nimport { plainToClass } from 'class-transformer';\r\nimport config from '../config';\r\n\r\nconst url = `${config.apiUrl}/api/visited-places`;\r\n\r\nexport const getPlaces = async (): Promise<CovidDataModel[]> => {\r\n  const promise: AxiosResponse<any[]> = await axios.get(url);\r\n  const response: VisitedPlacesResponse[] = plainToClass(VisitedPlacesResponse, promise.data);\r\n  \r\n  return response.map(r => new CovidDataModel(r._id, r.place, r.date, r.hours, r.isCrowded));\r\n}\r\n\r\nexport const getPlace = async (id: string): Promise<CovidDataModel> => {\r\n  const promise: AxiosResponse<any> = await axios.get(`${url}/${id}`);\r\n  const response: VisitedPlacesResponse = plainToClass(VisitedPlacesResponse, promise.data);\r\n\r\n  return new CovidDataModel(response._id, response.place, response.date, response.hours, response.isCrowded);\r\n}\r\n\r\nexport const savePlace = async (request: VisitedPlacePostRequest) => {\r\n  const promise: AxiosResponse<any> = await axios.post(url, request);\r\n  const response: VisitedPlacesResponse = plainToClass(VisitedPlacesResponse, promise.data);\r\n\r\n  return new CovidDataModel(response._id, response.place, response.date, response.hours, response.isCrowded);\r\n}\r\n\r\nexport const deletePlace = async (id: string): Promise<boolean> => {\r\n  await axios.delete(`${url}/${id}`);\r\n  \r\n  return true;\r\n}\r\n\r\nexport const putPlace = async (request: VisitedPlacePostRequest, id: string): Promise<CovidDataModel> => {\r\n  const promise: AxiosResponse<any> = await axios.put(`${url}/${id}`, request);\r\n  const response: VisitedPlacesResponse = plainToClass(VisitedPlacesResponse, promise.data);\r\n\r\n  return new CovidDataModel(response._id, response.place, response.date, response.hours, response.isCrowded);\r\n}","import { Dispatch, Action } from 'redux';\r\nimport { CovidDataModel } from '../../models/CovidDataModel';\r\nimport { deletePlace, getPlaces, putPlace, savePlace } from \"../../services/VisitedPlacesService\";\r\nimport { CustomAction } from './CustomAction';\r\nimport * as actions from './ActionTypes';\r\nimport { VisitedPlacePostRequest } from '../../services/messages/VisitedPlacePostRequest';\r\nimport moment from 'moment';\r\n\r\nexport function FetchPlace() {\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(FetchPlacesRequest());\r\n    getPlaces()\r\n      .then(r => dispatch(FetchPlaces(r)))\r\n  }\r\n}\r\n\r\nfunction FetchPlacesRequest(): Action {\r\n  return {\r\n    type: actions.FETCH_PLACES_REQUEST\r\n  };\r\n}\r\n\r\nfunction FetchPlaces(places: CovidDataModel[]): CustomAction {\r\n  return {\r\n    type: actions.FETCH_PLACES,\r\n    payload: {\r\n      places\r\n    }\r\n  }\r\n}\r\n\r\nexport function PostPlace(place: CovidDataModel) {\r\n  const request: VisitedPlacePostRequest = {\r\n    date: moment(place.date).startOf('day').toDate(),\r\n    hours: place.hours,\r\n    isCrowded: place.isExposed,\r\n    place: place.name\r\n  }\r\n\r\n  return function (dispatch: Dispatch<Action>) {\r\n    dispatch(PostPlaceRequest());\r\n    savePlace(request)\r\n      .then(r => dispatch(AddPlace(r)));\r\n  }\r\n}\r\n\r\nfunction PostPlaceRequest(): Action {\r\n  return {\r\n    type: actions.ADD_PLACE_REQUEST\r\n  }\r\n}\r\n\r\nfunction AddPlace(place: CovidDataModel): CustomAction {\r\n  return {\r\n    type: actions.ADD_PLACE,\r\n    payload: {\r\n      place\r\n    }\r\n  }\r\n}\r\n\r\nexport function RemovePlace(id: string) {\r\n  return function (dispatch: Dispatch<any>) {\r\n    dispatch(DeletePlaceRequest());\r\n    deletePlace(id)\r\n      .then(r => dispatch(DeletePlace(id)))\r\n  }\r\n}\r\n\r\nfunction DeletePlaceRequest(): Action {\r\n  return {\r\n    type: actions.REMOVE_PLACE_REQUEST\r\n  }\r\n}\r\n\r\nfunction DeletePlace(id: string): CustomAction {\r\n  return {\r\n    type: actions.REMOVE_PLACE,\r\n    payload: {\r\n      placeId: id\r\n    }\r\n  }\r\n}\r\n\r\nexport function SavePlace(place: CovidDataModel) {\r\n  const request: VisitedPlacePostRequest = {\r\n    date: moment(place.date).startOf('day').toDate(),\r\n    hours: place.hours,\r\n    isCrowded: place.isExposed,\r\n    place: place.name\r\n  }\r\n\r\n  return function (dispatch: Dispatch<any>) {\r\n    dispatch(UpdatePlaceRequest())\r\n    putPlace(request, place.id)\r\n      .then(r => dispatch(UpdatePlace(r)));\r\n  }\r\n}\r\n\r\nfunction UpdatePlaceRequest(): Action {\r\n  return {\r\n    type: actions.UPDATE_PLACE_REQUEST\r\n  }\r\n}\r\n\r\nfunction UpdatePlace(place: CovidDataModel): CustomAction {\r\n  return {\r\n    type: actions.UPDATE_PLACE,\r\n    payload: {\r\n      place\r\n    }\r\n  }\r\n}\r\n\r\nexport function ResetPlacesRequest(): Action {\r\n  return {\r\n    type: actions.RESET_DATA_REQUEST\r\n  }\r\n}\r\n\r\nexport function ResetPlaces(): Action {\r\n  return {\r\n    type: actions.RESET_DATA\r\n  }\r\n}","const FETCH_PLACES_REQUEST = 'Fetch PLACEs Request';\r\nconst FETCH_PLACES = 'Fetch Social PLACEs';\r\n\r\nconst ADD_PLACE_REQUEST = 'Add PLACE Request';\r\nconst ADD_PLACE = 'Add Social PLACE';\r\n\r\nconst UPDATE_PLACE_REQUEST = 'Update PLACE Request';\r\nconst UPDATE_PLACE = 'Update Social PLACE';\r\n\r\nconst REMOVE_PLACE_REQUEST = 'Remove PLACE Request';\r\nconst REMOVE_PLACE = 'Remove Social PLACE';\r\n\r\nconst RESET_DATA_REQUEST = 'Reset Places Request';\r\nconst RESET_DATA = 'Reset Places';\r\n\r\nexport {\r\n  FETCH_PLACES_REQUEST,\r\n  FETCH_PLACES,\r\n  ADD_PLACE_REQUEST,\r\n  ADD_PLACE,\r\n  UPDATE_PLACE_REQUEST,\r\n  UPDATE_PLACE,\r\n  REMOVE_PLACE_REQUEST,\r\n  REMOVE_PLACE,\r\n  RESET_DATA_REQUEST,\r\n  RESET_DATA\r\n};","import { VisitedPlaceState } from './../store/VisitedPlaces/VisitedPlaceState';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from 'react';\r\nimport useDateRange from './useDateRange';\r\nimport { FetchPlace, PostPlace, RemovePlace, SavePlace } from '../store/VisitedPlaces/VisitedPlaceActions';\r\nimport { CovidDataModel } from '../models/CovidDataModel';\r\nimport moment from 'moment';\r\n\r\nconst useVisitedPlace = () => {\r\n  const state = useSelector<any>(\r\n    (state) => {\r\n      const reducerState = state.visitedPlaceReducer as VisitedPlaceState;\r\n\r\n      return reducerState;\r\n    }\r\n  ) as VisitedPlaceState;\r\n\r\n  const { places: totalPlaces, loading } = state;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [places, setPlaces] = useState(totalPlaces);\r\n  const [hasPlaceExposure, setHasPlaceExposure] = useState(false);\r\n  const [placeOptions, setPlaceOptions] = useState<string[]>([]);\r\n  const { currentDateRange } = useDateRange();\r\n\r\n  useEffect(() => {\r\n    const filteredPlaces = totalPlaces.filter(i => new Date(i.date) >= currentDateRange.startDate &&\r\n                                              new Date(i.date) <= currentDateRange.endDate);\r\n    setPlaces(filteredPlaces);\r\n\r\n    const startDate = moment().subtract(13, 'days').startOf('day').toDate();\r\n    const endDate = moment().endOf('day').toDate();\r\n\r\n    const exposure = totalPlaces.some(i => new Date(i.date) >= startDate &&\r\n                                              new Date(i.date) <= endDate && \r\n                                              i.isExposed)\r\n    setHasPlaceExposure(exposure);\r\n    setPlaceOptions(totalPlaces.map(p => p.name));\r\n  }, [totalPlaces, currentDateRange]);\r\n\r\n  const fetchPlaces = () => {\r\n    dispatch(FetchPlace());\r\n  }\r\n\r\n  const addPlace = (data: CovidDataModel) => {\r\n    dispatch(PostPlace(data))\r\n  }\r\n\r\n  const deletePlace = (id: string) => {\r\n    dispatch(RemovePlace(id))\r\n  }\r\n\r\n  const savePlace = (data: CovidDataModel) => {\r\n    dispatch(SavePlace(data));\r\n  }\r\n\r\n  return {\r\n    places,\r\n    loading,\r\n    fetchPlaces,\r\n    addPlace,\r\n    deletePlace,\r\n    savePlace,\r\n    hasPlaceExposure,\r\n    placeOptions\r\n  }\r\n}\r\n\r\nexport default useVisitedPlace;","import React, { useEffect, useState } from \"react\";\r\nimport ActionButton from \"./ActionButtons\";\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport './Dashboard.scss';\r\nimport DonutChart from \"./DonutChart\";\r\nimport { SummarizedCovidDataModel } from \"../../models/SummarizedCovidDataModel\";\r\nimport CovidDataForm from \"../shared/CovidDataForm\";\r\nimport useSocialInteraction from \"../../hooks/useSocialInteraction\";\r\nimport useDateRange from \"../../hooks/useDateRange\";\r\nimport { CovidDataModel } from \"../../models/CovidDataModel\";\r\nimport useVisitedPlace from \"../../hooks/useVisitedPlace\";\r\n\r\ninterface CovidFormDetails {\r\n  type: 'Interaction' | 'Place';\r\n  title: string;\r\n  nameDisplayText: string;\r\n  exposureDisplayText: string;\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const socialInteractionTitle = 'Social Interactions'\r\n  const visitedPlacesTitle = 'Visited Places';\r\n  const [isInteractionsActive, setIsInteractionsActive] = useState(true);\r\n  const [formDetails, setFormDetails] = useState<CovidFormDetails>({\r\n    type: 'Interaction',\r\n    title: 'Add Social Interaction',\r\n    nameDisplayText: 'Name',\r\n    exposureDisplayText: 'Is Social Distancing Observed?'\r\n  });\r\n  \r\n  const { interactions, addInteraction, interactionOptions } = useSocialInteraction();\r\n  const { places, addPlace, placeOptions } = useVisitedPlace();\r\n  const { currentDateRange } = useDateRange();\r\n  const [options, setOptions] = useState<string[]>([]);\r\n\r\n  const [summary, setSummary] = useState<SummarizedCovidDataModel[]>([\r\n    { displayText: 'Not Exposed', displayValue: 0 },\r\n    { displayText: 'Exposed', displayValue: 0 }\r\n  ]);\r\n\r\n  const [redirectPath, setRedirectPath] = useState('/interactions');\r\n\r\n  useEffect(() => {\r\n    if (isInteractionsActive) {\r\n      setRedirectPath('/interactions');\r\n      setSummary([\r\n        {\r\n          displayText: 'Not Exposed',\r\n          displayValue: interactions.filter(i => !i.isExposed).length\r\n        },\r\n        {\r\n          displayText: 'Exposed',\r\n          displayValue: interactions.filter(i => i.isExposed).length\r\n        }\r\n      ])\r\n    } else {\r\n      setRedirectPath('/places');\r\n      setSummary([\r\n        {\r\n          displayText: 'Not Exposed',\r\n          displayValue: places.filter(i => !i.isExposed).length\r\n        },\r\n        {\r\n          displayText: 'Exposed',\r\n          displayValue: places.filter(i => i.isExposed).length\r\n        }\r\n      ])\r\n    }\r\n  }, [isInteractionsActive, interactions, places, currentDateRange])\r\n\r\n  const handleAddInteractions = () => {\r\n    setFormDetails({\r\n      type: 'Interaction',\r\n      title: 'Add Social Interaction',\r\n      nameDisplayText: 'Name',\r\n      exposureDisplayText: 'Is Social Distancing Observed?'\r\n    });\r\n    setOptions(interactionOptions);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleAddPlaces = () => {\r\n    setFormDetails({\r\n      type: 'Place',\r\n      title: 'Add Visited Place',\r\n      nameDisplayText: 'Place',\r\n      exposureDisplayText: 'Is the Place Crowded?'\r\n    });\r\n    setOptions(placeOptions);\r\n    setOpen(true);\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleSave = (data: CovidDataModel) => {\r\n    if (formDetails.type === \"Interaction\") {\r\n      addInteraction({ ...data, isExposed: !data.isExposed });\r\n    } else {\r\n      addPlace(data);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"action-buttons\">\r\n        <ActionButton text=\"Add Social Interactions\" \r\n          onClick={handleAddInteractions} \r\n          count={interactions.length} \r\n          icon={<AccessibilityIcon />}>\r\n        </ActionButton>\r\n        <div>\r\n          <div className=\"chart-header\" onClick={() => setIsInteractionsActive(!isInteractionsActive)}>\r\n            {\r\n              isInteractionsActive && (\r\n                <>\r\n                  <div className=\"header-text\">{socialInteractionTitle}</div>\r\n                  <div className=\"header-sub-text\">{visitedPlacesTitle}</div>\r\n                </>\r\n              )\r\n            }\r\n            {\r\n              !isInteractionsActive && (\r\n                <>\r\n                  <div className=\"header-text\">{visitedPlacesTitle}</div>\r\n                  <div className=\"header-sub-text\">{socialInteractionTitle}</div>\r\n                </>\r\n              )\r\n            }\r\n          </div>\r\n          <DonutChart data={summary} linkPath={redirectPath}></DonutChart>\r\n        </div>\r\n        <ActionButton text=\"Add Place Exposure\" \r\n          count={places.length} \r\n          icon={<RoomIcon />}\r\n          onClick={handleAddPlaces}>\r\n        </ActionButton>\r\n        <CovidDataForm open={open} \r\n          dialogTitle={formDetails.title}\r\n          nameDisplayText={formDetails.nameDisplayText}\r\n          exposureDisplayText={formDetails.exposureDisplayText}\r\n          handleClose={() => setOpen(false)}\r\n          saveCallback={handleSave}\r\n          nameOptions={options}>\r\n        </CovidDataForm>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './DateRangeButton.scss';\r\n\r\ntype Props = {\r\n  icon: string;\r\n  text: string;\r\n  selected: boolean;\r\n  handleDateRangeClick: () => void;\r\n};\r\n\r\nconst DateRangeButton: React.FC<Props> = (props: Props) => {\r\n  const { icon, text, selected, handleDateRangeClick } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className={`date-range-button ${selected ? 'active' : ''}`} onClick={handleDateRangeClick}>\r\n        <div className=\"date-range-icon\" dangerouslySetInnerHTML={{ __html: icon }}></div>\r\n        <div className=\"date-range-text\">{text}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DateRangeButton;","import { Dialog, DialogTitle, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useDateRange from \"../../../hooks/useDateRange\";\r\nimport DateRangeButton from \"./DateRangeButton\";\r\nimport * as ranges from '../../../shared/date-range';\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport { DatePickerView } from '@material-ui/pickers/DatePicker/DatePicker';\r\nimport './DateRangeDialog.scss';\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  handleCloseDialog: () => void;\r\n};\r\n\r\ntype DateButtons = {\r\n  icon: string;\r\n  text: string;\r\n  handleClick: () => void;\r\n  selected: boolean;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  center: {\r\n    textAlign: 'center'\r\n  }  \r\n});\r\n\r\ntype Mode = 'Y' | 'M' | 'C';\r\n\r\nconst DateRangeDialog: React.FC<Props> = (props: Props) => {\r\n  const { open, handleCloseDialog } = props;\r\n  const { lastSevenDays, today, lastTwoWeeks, month, year, customDate, currentDateRange } = useDateRange();\r\n  const classes = useStyles();\r\n\r\n  const buttons: DateButtons[] = [\r\n    {\r\n      icon: ranges.LAST_SEVEN_DAYS.icon,\r\n      text: ranges.LAST_SEVEN_DAYS.range,\r\n      handleClick: () => {\r\n        lastSevenDays();\r\n        handleCloseDialog();\r\n      },\r\n      selected: currentDateRange.icon === ranges.LAST_SEVEN_DAYS.icon\r\n    },\r\n    {\r\n      icon: ranges.ALL_TIME.icon,\r\n      text: ranges.ALL_TIME.range,\r\n      handleClick: () => {\r\n        lastTwoWeeks();\r\n        handleCloseDialog();\r\n      },\r\n      selected: currentDateRange.icon === ranges.ALL_TIME.icon\r\n    },\r\n    {\r\n      icon: ranges.TODAY.icon,\r\n      text: ranges.TODAY.range,\r\n      handleClick: () => {\r\n        today();\r\n        handleCloseDialog();\r\n      },\r\n      selected: currentDateRange.icon === ranges.TODAY.icon\r\n    },\r\n    {\r\n      icon: ranges.MONTH.icon,\r\n      text: ranges.MONTH.range,\r\n      handleClick: () => {\r\n        setViews(['year','month']);\r\n        setMode('M');\r\n        setOpenDatePicker(true);\r\n      },\r\n      selected: currentDateRange.icon === ranges.MONTH.icon\r\n    },\r\n    {\r\n      icon: ranges.YEAR.icon,\r\n      text: ranges.YEAR.range,\r\n      handleClick: () => {\r\n        setViews(['year']);\r\n        setMode('Y')\r\n        setOpenDatePicker(true);\r\n      },\r\n      selected: currentDateRange.icon === ranges.YEAR.icon\r\n    },\r\n    {\r\n      icon: ranges.CUSTOM_DATE.icon,\r\n      text: 'Select Date',\r\n      handleClick: () => {\r\n        setViews(['year', 'month', 'date']);\r\n        setMode('C');\r\n        setOpenDatePicker(true);\r\n      },\r\n      selected: currentDateRange.icon === ranges.CUSTOM_DATE.icon\r\n    }\r\n  ];\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [openDatePicker, setOpenDatePicker] = useState(false);\r\n  const [views, setViews] = useState<DatePickerView[]>(['year', 'month', 'date']);\r\n  const [mode, setMode] = useState<Mode>('C');\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setDate(date);\r\n    setOpenDatePicker(false);\r\n\r\n    switch(mode) {\r\n      case 'C':\r\n        customDate(date);\r\n        break;\r\n      case 'M':\r\n        month(date);\r\n        break;\r\n      default:\r\n        year(date);\r\n        break;\r\n    }\r\n\r\n    handleCloseDialog();\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleCloseDialog}>\r\n        <DialogTitle className={classes.center}>Select Date Range</DialogTitle>\r\n        <div className=\"date-range-dialog-buttons\">\r\n          {\r\n            buttons.map(b => \r\n              <DateRangeButton \r\n                icon={b.icon} \r\n                text={b.text} \r\n                selected={b.selected}\r\n                handleDateRangeClick={b.handleClick}\r\n                key={b.icon}>\r\n              </DateRangeButton>\r\n            )\r\n          }\r\n        </div>\r\n      </Dialog>\r\n      <DatePicker \r\n        open={openDatePicker} \r\n        value={date}\r\n        views={views}\r\n        onChange={handleDateChange}\r\n        onClose={() => setOpenDatePicker(false)}\r\n        TextFieldComponent={() => null}>\r\n      </DatePicker>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DateRangeDialog;","import React, { useState } from \"react\";\r\nimport useDateRange from \"../../../hooks/useDateRange\";\r\nimport DateRangeDialog from \"./DateRangeDialog\";\r\nimport './DateSelector.scss';\r\n\r\nconst DateRangeSelector = () => {\r\n  const { currentDateRange } = useDateRange();\r\n  const { display, icon } = currentDateRange;\r\n  const [open, setOpen] = useState(false);\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"date-selector-container\" onClick={() => setOpen(true)}>\r\n        <div className=\"date-selector-icon-container\" dangerouslySetInnerHTML={{ __html: icon }}></div>\r\n        <div className=\"date-selector-value\">{display}</div>\r\n      </div>\r\n      <DateRangeDialog open={open} handleCloseDialog={handleCloseDialog}></DateRangeDialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DateRangeSelector;","import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport React from \"react\";\r\nimport useSocialInteraction from \"../../hooks/useSocialInteraction\";\r\nimport useVisitedPlace from \"../../hooks/useVisitedPlace\";\r\nimport './NotificationAlerts.scss';\r\n\r\ntype Props = {\r\n  open: boolean;\r\n}\r\n\r\nconst NotificationAlerts: React.FC<Props> = (props: Props) => {\r\n  const { open } = props;\r\n  const { hasInteractionExposure } = useSocialInteraction();\r\n  const { hasPlaceExposure } = useVisitedPlace();\r\n\r\n  return (\r\n    <>\r\n      {\r\n        open &&\r\n        <div className=\"floating-alert-div\">\r\n          {\r\n            !hasInteractionExposure &&\r\n            <div className=\"alerts\">\r\n              <Alert severity=\"success\">\r\n                <AlertTitle>Great</AlertTitle>\r\n                You are maintaining proper social distancing. Keep it up!\r\n              </Alert>\r\n            </div>\r\n          }\r\n          {\r\n            hasInteractionExposure &&\r\n            <div className=\"alerts\">\r\n              <Alert severity=\"error\">\r\n                <AlertTitle>Warning</AlertTitle>\r\n                You did not practice social distancing for the last 14 days. Stay at home and maintain 1-2 meters away from other people\r\n              </Alert>\r\n            </div>\r\n          }\r\n          {\r\n            !hasPlaceExposure &&\r\n            <div className=\"alerts\">\r\n              <Alert severity=\"success\">\r\n                <AlertTitle>Great</AlertTitle>\r\n                Thank you for helping to stop spread the virus by staying at home.\r\n              </Alert>\r\n            </div>\r\n          }\r\n          {\r\n            hasPlaceExposure &&\r\n            <div className=\"alerts\">\r\n              <Alert severity=\"error\">\r\n                <AlertTitle>Warning</AlertTitle>\r\n                You have been exposed to a crowded place for the last 14 days. Try to avoid crowded places to minimize your exposure risk.\r\n              </Alert>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotificationAlerts;","import axios from \"axios\";\r\nimport config from '../config';\r\n\r\nconst url = `${config.apiUrl}/api/reset`;\r\n\r\nexport const ResetData = async (): Promise<boolean> => {\r\n  await axios.post(url);\r\n\r\n  return true;\r\n}","import { useDispatch } from 'react-redux';\r\nimport { ResetData } from \"../services/ResetService\";\r\nimport { ResetInteractionRequest, ResetInteractoin } from '../store/SocialInteraction/SocialInteractionActions';\r\nimport { ResetPlaces, ResetPlacesRequest } from '../store/VisitedPlaces/VisitedPlaceActions';\r\n\r\nconst useReset = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const resetData = () => {\r\n    dispatch(ResetPlacesRequest());\r\n    dispatch(ResetInteractionRequest())\r\n\r\n    ResetData().then(r => {\r\n      dispatch(ResetPlaces());\r\n      dispatch(ResetInteractoin())\r\n    });\r\n  }\r\n\r\n  return {\r\n    resetData\r\n  }\r\n}\r\n\r\nexport default useReset;","import { Button, Dialog, DialogActions, DialogContent, makeStyles } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport useReset from '../../hooks/useReset';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 450\r\n  }\r\n})\r\n\r\ntype Props = {\r\n  open: boolean,\r\n  handleClose?: () => void;\r\n}\r\n\r\nconst ResetDataDialog: React.FC<Props> = (props: Props) => {\r\n  const { open, handleClose } = props;\r\n  const classes = useStyles();\r\n  const { resetData } = useReset();\r\n\r\n  const handleReset = () => {\r\n    resetData();\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={handleClose} disableBackdropClick={true}>\r\n        <Alert severity=\"error\">\r\n          <AlertTitle><b>You are trying to reset the data!</b></AlertTitle>\r\n        </Alert>\r\n        <DialogContent className={classes.root}>\r\n          <p>Resetting the data would mean deleting all interactions and places that are currently saved.</p>\r\n          <p>Are you sure you want to proceed?</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleReset} color=\"primary\" autoFocus>\r\n            Proceed\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetDataDialog;","import { AppBar, Badge, BottomNavigation, BottomNavigationAction, IconButton, LinearProgress, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport DateRangeSelector from './DateRangeSelector/DateRangeSelector';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useSocialInteraction from \"../../hooks/useSocialInteraction\";\r\nimport useVisitedPlace from \"../../hooks/useVisitedPlace\";\r\nimport './Header.scss';\r\nimport NotificationAlerts from \"./NotificationAlerts\";\r\nimport ResetDataDialog from \"./ResetDataDialog\";\r\n\r\nconst Header = () => {\r\n  const [navigationValue, setNavigationValue] = useState<number | undefined>(0);\r\n  const [openAlerts, setOpenAlerts] = useState(false);\r\n  const [openResetDialog, setOpenResetDialog] = useState(false);\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const { loading: interactionsLoading, hasInteractionExposure } = useSocialInteraction();\r\n  const { loading: placesLoading, hasPlaceExposure } = useVisitedPlace();\r\n\r\n  const [badgeCount, setBadgeCount] = useState(0);\r\n  useEffect(() => {\r\n    if (hasInteractionExposure && hasPlaceExposure) {\r\n      setBadgeCount(2);\r\n    } else if (hasInteractionExposure || hasPlaceExposure) {\r\n      setBadgeCount(1);\r\n    } else {\r\n      setBadgeCount(2);\r\n    }\r\n\r\n  }, [hasInteractionExposure, hasPlaceExposure])\r\n\r\n  useEffect(() => {\r\n    if (pathname === '/') {\r\n      setNavigationValue(0);\r\n    } else if (pathname === '/interactions') {\r\n      setNavigationValue(1)\r\n    } else if (pathname === '/places') {\r\n      setNavigationValue(2)\r\n    } else if (pathname === '/overview') {\r\n      setNavigationValue(3)\r\n    } else {\r\n      setNavigationValue(undefined);\r\n    }\r\n  }, [pathname])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: 600,\r\n    },\r\n    indeterminate: {\r\n      display: 'none'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"header-toolbar\">\r\n          <Typography variant=\"h6\">\r\n            COVID Tracker Tool\r\n          </Typography>\r\n          <div className=\"action-icons\">\r\n            <IconButton color=\"inherit\" \r\n              className=\"bell-icon\"\r\n              onClick={() => setOpenAlerts(!openAlerts)}>\r\n              <Badge badgeContent={badgeCount} color={hasInteractionExposure || hasPlaceExposure ? 'secondary' : 'primary' }>\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\" className=\"gear-icon\"\r\n              onClick={() => setOpenResetDialog(true)}>\r\n              <SettingsBackupRestoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <BottomNavigation\r\n        value={navigationValue}\r\n        onChange={(event, newValue) => {\r\n          setNavigationValue(newValue);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction label=\"Dashboard\" icon={<DashboardIcon />} onClick={() => history.push('/')} />\r\n        <BottomNavigationAction label=\"Social Interactions\" icon={<AccessibilityIcon />}  onClick={() => history.push('/interactions')} />\r\n        <BottomNavigationAction label=\"Visited Places\" icon={<LocationOnIcon />} onClick={() => history.push('/places')} />\r\n        <BottomNavigationAction label=\"Overview\" icon={<AssessmentIcon />} onClick={() => history.push('/overview')} />\r\n      </BottomNavigation>\r\n      <DateRangeSelector></DateRangeSelector>\r\n      <div className=\"linear-progress\">\r\n        <LinearProgress className={interactionsLoading || placesLoading ? '' : classes.indeterminate} />\r\n      </div>\r\n      <NotificationAlerts open={openAlerts} />\r\n      <ResetDataDialog open={openResetDialog} handleClose={() => setOpenResetDialog(false)} />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './NotFound.scss';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <div className=\"not-found\">\r\n        <p>The page you are looking for does not exist</p>\r\n        <p><Link to=\"/\">Return to Dashboard</Link></p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React, { useEffect, useState } from 'react';\r\nimport useSocialInteraction from '../../hooks/useSocialInteraction';\r\nimport useVisitedPlace from '../../hooks/useVisitedPlace';\r\nimport './ExposureIncidents.scss';\r\n\r\nconst ExposureIncidents = () => {\r\n  const { interactions } = useSocialInteraction();\r\n  const { places } = useVisitedPlace();\r\n  const [totalCount, setTotalCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const exposedInteractions = interactions.filter(i => i.isExposed).length;\r\n    const exposedPlaces = places.filter(i => i.isExposed).length;\r\n\r\n    setTotalCount(exposedInteractions + exposedPlaces);\r\n  }, [interactions, places])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"exposure-incidents\">\r\n        <div className=\"exposure-incident\">\r\n          Total Interaction Exposures\r\n          <div className=\"exposure-count\">{interactions.filter(i => i.isExposed).length}</div>\r\n        </div>\r\n        <div className=\"exposure-incident\">\r\n          Total Place Exposures\r\n          <div className=\"exposure-count\">{places.filter(i => i.isExposed).length}</div>\r\n        </div>\r\n        <div className=\"exposure-incident\">\r\n          Total Exposure Incidents\r\n          <div className=\"exposure-count grand-total\">{totalCount}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ExposureIncidents;","import React from 'react';\r\nimport './ViewModeButton.scss';\r\n\r\ntype Props = {\r\n  title: string;\r\n  count: number;\r\n  buttonClass: string;\r\n  isActive: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst ViewModeButton: React.FC<Props> = (props: Props) => {\r\n  const { title, count, buttonClass, isActive, onClick } = props;\r\n\r\n  return (\r\n    <>\r\n      <div onClick={onClick}\r\n        className={`view-mode-button ${buttonClass} ${ isActive ? 'active' : '' }`}>\r\n        <span className=\"view-mode-title\">{title}</span>\r\n        <div className=\"view-mode-count\">\r\n          {count}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewModeButton;","import { Stack, ValueScale } from '@devexpress/dx-react-chart';\r\nimport { ArgumentAxis, BarSeries, Chart, ValueAxis, Legend } from '@devexpress/dx-react-chart-material-ui';\r\nimport { Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { OverviewCovidDataModel } from '../../models/OverviewCovidDataModel';\r\nimport './OverviewChart.scss';\r\n\r\ntype Props = {\r\n  data: OverviewCovidDataModel[];\r\n}\r\n\r\nconst OverviewChart: React.FC<Props> = (props: Props) => {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chart-container\">\r\n        <Paper>\r\n          <Chart data={data} height={300}>\r\n            <ValueScale name=\"exposure\" />\r\n\r\n            <ValueAxis\r\n              scaleName=\"exposure\"\r\n            />\r\n            <ArgumentAxis />\r\n\r\n            <BarSeries\r\n              valueField=\"notExposed\"\r\n              argumentField=\"date\"\r\n              name=\"Not Exposed\"\r\n              scaleName=\"exposure\"\r\n            />\r\n            <BarSeries\r\n              valueField=\"exposed\"\r\n              argumentField=\"date\"\r\n              name=\"Exposed\"\r\n              scaleName=\"exposure\"\r\n            />\r\n            \r\n            <Stack stacks={[\r\n              { series: ['Exposed', 'Not Exposed'] }\r\n            ]}></Stack>\r\n\r\n            <Legend position=\"bottom\" />\r\n          </Chart>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OverviewChart;","import { OverviewCovidDataModel } from './../models/OverviewCovidDataModel';\r\nimport { CovidDataModel } from './../models/CovidDataModel';\r\nimport moment from 'moment';\r\nimport * as ranges from './date-range';\r\n\r\nexport type divider = \"day\" | \"week\" | \"month\" | \"year\" | \"twoWeeks\";\r\n\r\nexport const getDivider = (range: string): divider => {\r\n  switch (range) {\r\n    case ranges.LAST_SEVEN_DAYS.range:\r\n      return \"week\"\r\n    case ranges.MONTH.range:\r\n      return \"month\"\r\n    case ranges.YEAR.range:\r\n      return \"year\"\r\n    case ranges.ALL_TIME.range:\r\n      return \"twoWeeks\"\r\n    default:\r\n      return \"day\"\r\n  }\r\n} \r\n\r\nexport const summarize = (data: CovidDataModel[], \r\n  divisionUnit: divider,\r\n  baseDate: Date): OverviewCovidDataModel[] => {\r\n  const overview: OverviewCovidDataModel[] = [];\r\n\r\n  if (divisionUnit === \"day\") {\r\n    const model: OverviewCovidDataModel = {\r\n      date: moment(baseDate).format('MMM DD, yyyy'),\r\n      exposed: data.filter(d => d.isExposed).length,\r\n      notExposed: data.filter(d => !d.isExposed).length\r\n    };\r\n\r\n    overview.push(model);\r\n  } else if (divisionUnit === \"week\") {\r\n    // loop 7 to count one week\r\n    for (let index = 0; index < 7; index++) {\r\n      const dayStart = moment().subtract(index, \"day\").startOf('day').toDate();\r\n      const dayEnd = moment().subtract(index, \"day\").endOf('day').toDate();\r\n\r\n      const exposures = data.filter(d => new Date(d.date) >= dayStart && new Date(d.date) <= dayEnd);\r\n\r\n      const exposure: OverviewCovidDataModel = {\r\n        date: moment().subtract(index, \"day\").format('MMM DD'),\r\n        exposed: exposures.filter(e => e.isExposed).length,\r\n        notExposed: exposures.filter(e => !e.isExposed).length\r\n      }\r\n\r\n      overview.unshift(exposure);\r\n    }\r\n  } else if (divisionUnit === \"month\") {\r\n    const daysInMonth = moment(baseDate).daysInMonth();\r\n    const lastDayOfMonth = moment(baseDate).endOf('month');\r\n\r\n    for (let index = 0; index < daysInMonth; index++) {\r\n      const dayStart = moment(lastDayOfMonth).subtract(index, \"day\").startOf('day').toDate();\r\n      const dayEnd = moment(lastDayOfMonth).subtract(index, \"day\").endOf('day').toDate();\r\n\r\n      const exposures = data.filter(d => new Date(d.date) >= dayStart && new Date(d.date) <= dayEnd);\r\n\r\n      const exposure: OverviewCovidDataModel = {\r\n        date: moment(lastDayOfMonth).subtract(index, \"day\").format('DD'),\r\n        exposed: exposures.filter(e => e.isExposed).length,\r\n        notExposed: exposures.filter(e => !e.isExposed).length\r\n      }\r\n\r\n      overview.unshift(exposure);\r\n    }\r\n  } else if (divisionUnit === \"year\") {\r\n    const lastDayOfYear = moment(baseDate).endOf('year');\r\n\r\n    for (let index = 0; index < 12; index++) {\r\n      const dayStart = moment(lastDayOfYear).subtract(index, \"month\").startOf('month').startOf('day').toDate();\r\n      const dayEnd = moment(lastDayOfYear).subtract(index, \"month\").endOf('month').endOf('day').toDate();\r\n\r\n      const exposures = data.filter(d => new Date(d.date) >= dayStart && new Date(d.date) <= dayEnd);\r\n\r\n      const exposure: OverviewCovidDataModel = {\r\n        date: moment(lastDayOfYear).subtract(index, \"month\").format('MMM'),\r\n        exposed: exposures.filter(e => e.isExposed).length,\r\n        notExposed: exposures.filter(e => !e.isExposed).length\r\n      }\r\n\r\n      overview.unshift(exposure);\r\n      \r\n    }\r\n  } else {\r\n    // 2 weeks = 14 days\r\n    for (let index = 0; index < 14; index++) {\r\n      const dayStart = moment().subtract(index, \"day\").startOf('day').toDate();\r\n      const dayEnd = moment().subtract(index, \"day\").endOf('day').toDate();\r\n\r\n      const exposures = data.filter(d => new Date(d.date) >= dayStart && new Date(d.date) <= dayEnd);\r\n\r\n      const exposure: OverviewCovidDataModel = {\r\n        date: moment().subtract(index, \"day\").format('MM/DD'),\r\n        exposed: exposures.filter(e => e.isExposed).length,\r\n        notExposed: exposures.filter(e => !e.isExposed).length\r\n      }\r\n\r\n      overview.unshift(exposure);\r\n    }\r\n  }\r\n\r\n  return overview;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport useSocialInteraction from \"../../hooks/useSocialInteraction\";\r\nimport useVisitedPlace from \"../../hooks/useVisitedPlace\";\r\nimport ExposureIncidents from \"./ExposureIncidents\";\r\nimport ViewModeButton from \"./ViewModeButton\";\r\nimport './Overview.scss';\r\nimport OverviewChart from \"./OverviewChart\";\r\nimport { OverviewCovidDataModel } from \"../../models/OverviewCovidDataModel\";\r\nimport { getDivider, summarize } from \"../../shared/overview-data-helper\";\r\nimport useDateRange from \"../../hooks/useDateRange\";\r\n\r\ntype ViewMode = \"interactions\" | \"places\";\r\n\r\nconst Overview = () => {\r\n  const [mode, setMode] = useState<ViewMode>(\"interactions\")\r\n  const { interactions } = useSocialInteraction();\r\n  const { places } = useVisitedPlace();\r\n  const { currentDateRange } = useDateRange();\r\n  const [overview, setOverview] = useState<OverviewCovidDataModel[]>([]);\r\n  \r\n  useEffect(() => {\r\n    if (mode === \"interactions\") {\r\n      setOverview(summarize(interactions, getDivider(currentDateRange.range), currentDateRange.endDate));\r\n    } else {\r\n      setOverview(summarize(places, getDivider(currentDateRange.range), currentDateRange.endDate));\r\n    }\r\n  }, [interactions, places, mode, currentDateRange])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overview-container\">\r\n        <div className=\"overview-header\">\r\n          <ExposureIncidents />\r\n          <div className=\"mode-buttons\">\r\n            <ViewModeButton title=\"Total Social Interactions\"\r\n              count={interactions.length}\r\n              buttonClass=\"social-interaction\"\r\n              isActive={mode === \"interactions\"}\r\n              onClick={() => setMode(\"interactions\")} />\r\n            <ViewModeButton title=\"Total Visited Places\"\r\n              count={places.length}\r\n              buttonClass=\"visited-place\"\r\n              isActive={mode === \"places\"}\r\n              onClick={() => setMode(\"places\")} />\r\n          </div>\r\n        </div>\r\n        <div className=\"overview-chart-body\">\r\n          <OverviewChart data={overview} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Overview;","import { GroupedCovidDataModel } from './../models/GroupedCovidDataModel';\r\nimport { CovidDataModel } from './../models/CovidDataModel';\r\nimport * as _ from 'underscore';\r\nimport moment from 'moment';\r\n\r\nexport function groupData(data: CovidDataModel[]): GroupedCovidDataModel[] {\r\n  const dateGroups = _.groupBy(data, (d) => {\r\n    return moment(d.date).startOf('day').format('MM/DD/yyyy');\r\n  })\r\n\r\n  const groupedDataModel: GroupedCovidDataModel[] = [];\r\n  Object.keys(dateGroups).forEach(k => {\r\n    const model: GroupedCovidDataModel = {\r\n      date: moment(k, 'MM/DD/yyyy').startOf('day').toDate(),\r\n      data: dateGroups[k]\r\n    }\r\n\r\n    groupedDataModel.push(model);\r\n  })\r\n\r\n  return groupedDataModel;\r\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  handleClose?: () => void;\r\n  deleteCallback?: () => void;\r\n}\r\n\r\nconst CovidDataDeleteDialog: React.FC<Props> = (props: Props) => {\r\n  const { open, handleClose, deleteCallback } = props;\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open}\r\n        disableBackdropClick={true}\r\n        onClose={handleClose}>\r\n        <DialogTitle>Delete Data</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure about deleting this data?\r\n          </DialogContentText>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Disagree\r\n            </Button>\r\n            <Button onClick={deleteCallback} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataDeleteDialog;","import { CovidDataModel } from './../models/CovidDataModel';\r\nimport React from 'react';\r\n\r\ntype TableContextProps = {\r\n  mode: \"interaction\" | \"place\"\r\n  dialogTitle: string;\r\n  nameDisplayText: string;\r\n  exposureDisplayText: string;\r\n  deleteDataCallback: any;\r\n  updateDataCallback: any;\r\n  nameOptions: string[];\r\n}\r\n\r\nexport const TableContext = React.createContext<TableContextProps>(\r\n  {\r\n    mode: \"interaction\",\r\n    dialogTitle: '',\r\n    nameDisplayText: '',\r\n    exposureDisplayText: '',\r\n    deleteDataCallback: (id: string) => {},\r\n    updateDataCallback: (data: CovidDataModel) => {},\r\n    nameOptions: []\r\n  }\r\n); \r\n\r\n","import { Fab, makeStyles, TableCell, TableRow } from '@material-ui/core';\r\nimport React, { useContext, useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './CovidDataRowGroupDetails.scss';\r\nimport { CovidDataModel } from '../../models/CovidDataModel';\r\nimport CovidDataDeleteDialog from './CovidDataDeleteDialog';\r\nimport { TableContext } from '../../context/TableContext';\r\nimport CovidDataForm from './CovidDataForm';\r\n\r\nconst useActionStyles = makeStyles({\r\n  root: {\r\n    margin: '0px 5px'\r\n  }\r\n})\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    verticalAlign: 'top'\r\n  }\r\n})\r\n\r\ntype Props = {\r\n  detail: CovidDataModel;\r\n}\r\n\r\nconst CovidDataRowGroupDetails: React.FC<Props> = (props: Props) => {\r\n  const actionClasses = useActionStyles();\r\n  const rowClasses = useRowStyles();\r\n  const { detail } = props;\r\n\r\n  const iconStyles: React.CSSProperties = {\r\n    width: '80px'\r\n  }\r\n\r\n  const nameStyles: React.CSSProperties = {\r\n    width: '244px'\r\n  }\r\n\r\n  const hourStyles: React.CSSProperties = {\r\n    width: '80px'\r\n  }\r\n\r\n  const actionStyles: React.CSSProperties = {\r\n    width: '80px'\r\n  }\r\n\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const onDeleteDialogClose = () => {\r\n    setOpenDeleteDialog(false);\r\n  }\r\n\r\n  const { \r\n    mode, \r\n    dialogTitle, \r\n    nameDisplayText, \r\n    exposureDisplayText, \r\n    updateDataCallback, \r\n    deleteDataCallback,\r\n    nameOptions\r\n  } = useContext(TableContext);\r\n\r\n  const onDelete = () => {\r\n    deleteDataCallback(detail.id);\r\n    setOpenDeleteDialog(false);\r\n  }\r\n\r\n  const [openUpdateDialog, setOpenUpdateDialog] = useState(false);\r\n  const onUpdate = (data: CovidDataModel) => {\r\n    updateDataCallback({...data, id: detail.id});\r\n    setOpenUpdateDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={rowClasses.root}>\r\n        <TableCell style={iconStyles}>\r\n          <div className=\"exposure-icon\">\r\n            <Fab color={ detail.isExposed ? 'secondary' : 'primary' }\r\n            size=\"small\"\r\n            aria-label=\"add\" \r\n            disableRipple={true}\r\n            disableFocusRipple={true}>&nbsp;</Fab>\r\n            <div className=\"exposure-text\">\r\n              { detail.isExposed ? 'Exposed' : 'Not Exposed' }\r\n            </div>\r\n          </div>\r\n        </TableCell>\r\n        <TableCell style={nameStyles}>\r\n          <div className=\"detail-header\">{nameDisplayText}</div>\r\n          <div className=\"detail-content\">{ detail.name  }</div>\r\n        </TableCell>\r\n        <TableCell style={hourStyles}>\r\n          <div className=\"detail-header\">Hours Spent</div>\r\n          <div className=\"detail-content\">{ detail.hours }</div>\r\n        </TableCell>\r\n        <TableCell style={actionStyles}>\r\n          <div className=\"detail-actions\">\r\n            <Fab color=\"default\" size=\"small\" className={actionClasses.root}\r\n              onClick={() => setOpenUpdateDialog(true)}>\r\n              <EditIcon />\r\n            </Fab>\r\n            <Fab color=\"default\" size=\"small\" className={actionClasses.root}\r\n              onClick={() => setOpenDeleteDialog(true)}>\r\n              <DeleteIcon />\r\n            </Fab>\r\n          </div>\r\n        </TableCell>\r\n      </TableRow>\r\n      <CovidDataDeleteDialog open={openDeleteDialog}\r\n        handleClose={onDeleteDialogClose}\r\n        deleteCallback={onDelete} />\r\n      <CovidDataForm dialogTitle={dialogTitle}\r\n        open={openUpdateDialog}\r\n        nameDisplayText={nameDisplayText}\r\n        exposureDisplayText={exposureDisplayText}\r\n        handleClose={() => setOpenUpdateDialog(false)}\r\n        initialValue={mode === \"interaction\" ? {...detail, isExposed: !detail.isExposed} : detail}\r\n        saveCallback={onUpdate}\r\n        nameOptions={nameOptions} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataRowGroupDetails;","import { makeStyles, TableCell } from \"@material-ui/core\";\r\nimport { TableRow } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport './CovidDataRowGroupHeader.scss';\r\n\r\nconst useHeaderRowStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#d6d4d4',\r\n    boxShadow: '0px -1px 5px 0px rgba(0,0,0,0.75)',\r\n    borderBottom: '1.5px solid gray',\r\n    marginTop: '5px'\r\n  }\r\n})\r\n\r\nconst useHeaderCellStyles = makeStyles({\r\n  root: {\r\n    color: '#3e4ea0',\r\n    padding: '5px 0px 5px 10px'\r\n  }\r\n})\r\n\r\ntype Props = {\r\n  headerDate: Date\r\n}\r\n\r\nconst CovidDataRowGroupHeader: React.FC<Props> = (props: Props) => {\r\n  const headerRowClasses = useHeaderRowStyles();\r\n  const headerCellClasses = useHeaderCellStyles();\r\n\r\n  const { headerDate } = props;\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={headerRowClasses.root}>\r\n        <TableCell className={headerCellClasses.root} colSpan={4}>\r\n          <div className=\"header-date\">\r\n            <div className=\"date-part\">{ moment(headerDate).format('DD') }</div>\r\n            <div className=\"other-part\">\r\n              <div className=\"day-part\">{ moment(headerDate).format('dddd') }</div>\r\n              <div className=\"month-year-part\">{ moment(headerDate).format('MMM yyyy') }</div>\r\n            </div>\r\n          </div>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataRowGroupHeader;","import React from 'react';\r\nimport { GroupedCovidDataModel } from '../../models/GroupedCovidDataModel';\r\nimport CovidDataRowGroupDetails from './CovidDataRowGroupDetails';\r\nimport CovidDataRowGroupHeader from './CovidDataRowGroupHeader';\r\n\r\ntype Props = {\r\n  groupedData: GroupedCovidDataModel\r\n}\r\n\r\nconst CovidDataRowGroup: React.FC<Props> = (props: Props) => {\r\n  const { groupedData } = props;\r\n  const { date, data: details } = groupedData;\r\n\r\n  return (\r\n    <>\r\n      <CovidDataRowGroupHeader headerDate={date} />\r\n      {\r\n        details.map(d => <CovidDataRowGroupDetails key={d.id} detail={d} />)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataRowGroup;","import { makeStyles, Table, TableBody, TableFooter, TablePagination, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { GroupedCovidDataModel } from '../../models/GroupedCovidDataModel';\r\nimport CovidDataRowGroup from './CovidDataRowGroup';\r\n\r\nconst useFooterRowStyles = makeStyles({\r\n  root: {\r\n    boxShadow: '0px -1px 5px 0px rgba(0,0,0,0.75)',\r\n    marginTop: '5px'\r\n  }\r\n})\r\n\r\ntype Pagination = {\r\n  length: number,\r\n  rowsPerPage: number,\r\n  page: number\r\n}\r\n\r\ntype Props = {\r\n  data: GroupedCovidDataModel[],\r\n  pagination: Pagination,\r\n  rowsPerPageCallback: (value: number) => void,\r\n  pageCallback: (value: number) => void\r\n}\r\n\r\nconst CovidDataTable: React.FC<Props> = (props: Props) => {\r\n  const { data, pagination, rowsPerPageCallback, pageCallback } = props;\r\n  const { length, rowsPerPage, page } = pagination;\r\n  const footerClasses = useFooterRowStyles();\r\n\r\n  const handleRowsPerPageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    rowsPerPageCallback(+event.target.value);\r\n  }\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    pageCallback(newPage);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Scrollbars\r\n          style={{ height: '370px' }}\r\n          autoHide>\r\n        <Table>\r\n          <TableBody>\r\n            {\r\n              data.map((d, index) => <CovidDataRowGroup key={index} groupedData={d} />)\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </Scrollbars>\r\n      <Table>\r\n        <TableFooter className={footerClasses.root}>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPage={rowsPerPage}\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              colSpan={4}\r\n              count={length}\r\n              page={page}\r\n              onChangePage={(event, newPage) => handlePageChange(newPage)}\r\n              onChangeRowsPerPage={handleRowsPerPageChange}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataTable;","import { Fab, makeStyles } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './CovidDataAddButton.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\ntype Props = {\r\n  addDisplayText: string,\r\n  onAddClick?: () => void\r\n}\r\n\r\nconst CovidDataAddButton: React.FC<Props> = (props: Props) => {\r\n  const { addDisplayText, onAddClick } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"floating-add-button\">\r\n        <Fab color=\"default\" variant=\"extended\" onClick={onAddClick}>\r\n          <AddIcon className={classes.extendedIcon} />\r\n          {addDisplayText}\r\n        </Fab>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataAddButton;","import React from \"react\";\r\nimport './CovidDataEmptyTable.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst CovidDataEmptyTable: React.FC<Props> = (props: Props) => {\r\n  return (\r\n    <>\r\n      <div className=\"empty-table\">\r\n        <div className=\"empty-message\">\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CovidDataEmptyTable;","import React, { useEffect, useState } from \"react\";\r\nimport useSocialInteraction from \"../../hooks/useSocialInteraction\";\r\nimport { GroupedCovidDataModel } from \"../../models/GroupedCovidDataModel\";\r\nimport { groupData } from \"../../shared/group-data-helper\";\r\nimport CovidDataTable from \"../shared/CovidDataTable\";\r\nimport CovidDataAddButton from \"../shared/CovidDataAddButton\";\r\nimport CovidDataForm from \"../shared/CovidDataForm\";\r\nimport { CovidDataModel } from \"../../models/CovidDataModel\";\r\nimport { TableContext } from \"../../context/TableContext\";\r\nimport CovidDataEmptyTable from \"../shared/CovidDataEmptyTable\";\r\n\r\nconst SocialInteractions = () => {\r\n  const { interactions, addInteraction, deleteInteraction, updateInteraction, loading, interactionOptions } = useSocialInteraction();\r\n  const [groupedInteractions, setGroupedInteractions] = useState<GroupedCovidDataModel[]>([]);\r\n\r\n  // pagination data\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [take, setTake] = useState(5);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [nameOptions, setNameOptions] = useState<string[]>([]);\r\n\r\n  const onInteractionAdd = (interaction: CovidDataModel) => {\r\n    addInteraction({ ...interaction, isExposed: !interaction.isExposed });\r\n  }\r\n\r\n  const onRowsPerPageChange = (value: number) => {\r\n    setTake(value);\r\n  }\r\n\r\n  const onPageChange = (value: number) => {\r\n    setPage(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLength(interactions.length);\r\n    const currentPage = (page * take);\r\n    setGroupedInteractions(groupData(interactions\r\n      .slice()\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n      .slice(currentPage, currentPage + take)))\r\n    \r\n    setNameOptions(interactionOptions);\r\n  }, [interactions, page, take, interactionOptions])\r\n\r\n  const dialogTitle = \"Update Social Interaction\";\r\n  const nameDisplayText = 'Name';\r\n  const exposureDisplayText = \"Is Social Distancing Observed?\";\r\n  const updateDataCallback = (data: CovidDataModel) => {\r\n    updateInteraction({...data, isExposed: !data.isExposed});\r\n  }\r\n  const deleteDataCallback = (id: string) => {\r\n    deleteInteraction(id);\r\n  }\r\n\r\n  const contextValues = {\r\n    dialogTitle, \r\n    nameDisplayText, \r\n    exposureDisplayText, \r\n    updateDataCallback, \r\n    deleteDataCallback,\r\n    nameOptions\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContext.Provider value={{...contextValues, mode: \"interaction\"}}>\r\n        {\r\n          interactions.length > 0 &&\r\n          <CovidDataTable \r\n            data={groupedInteractions} \r\n            pagination={{\r\n              length,\r\n              rowsPerPage: take,\r\n              page\r\n            }}\r\n            rowsPerPageCallback={onRowsPerPageChange}\r\n            pageCallback={onPageChange} />\r\n        }\r\n        {\r\n          interactions.length <= 0 &&\r\n          <CovidDataEmptyTable>\r\n            No interaction data present yet. Click on <b>ADD INTERACTION</b> to start collecting data.\r\n          </CovidDataEmptyTable>\r\n        }\r\n      </TableContext.Provider>\r\n      {\r\n        !loading &&\r\n        <CovidDataAddButton addDisplayText=\"Add Interaction\"\r\n          onAddClick={() => setOpen(true)} />\r\n      }\r\n      <CovidDataForm open={open}\r\n        dialogTitle=\"Add Social Interaction\"\r\n        nameDisplayText=\"Name\"\r\n        exposureDisplayText=\"Is Social Distancing Observed?\"\r\n        saveCallback={onInteractionAdd}\r\n        handleClose={() => setOpen(false)}\r\n        nameOptions={nameOptions} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SocialInteractions;","import React, { useEffect, useState } from \"react\";\r\nimport { TableContext } from \"../../context/TableContext\";\r\nimport useVisitedPlace from \"../../hooks/useVisitedPlace\";\r\nimport { CovidDataModel } from \"../../models/CovidDataModel\";\r\nimport { GroupedCovidDataModel } from \"../../models/GroupedCovidDataModel\";\r\nimport { groupData } from \"../../shared/group-data-helper\";\r\nimport CovidDataAddButton from \"../shared/CovidDataAddButton\";\r\nimport CovidDataEmptyTable from \"../shared/CovidDataEmptyTable\";\r\nimport CovidDataForm from \"../shared/CovidDataForm\";\r\nimport CovidDataTable from \"../shared/CovidDataTable\";\r\n\r\nconst VisitedPlaces = () => {\r\n  const { places, addPlace, loading, deletePlace, savePlace, placeOptions } = useVisitedPlace();\r\n  const [groupedPlaces, setGroupedPlaces] = useState<GroupedCovidDataModel[]>([]);\r\n\r\n  // pagination data\r\n  const [length, setLength] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [take, setTake] = useState(5);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [nameOptions, setNameOptions] = useState<string[]>([]);\r\n\r\n  const onPlaceAdd = (place: CovidDataModel) => {\r\n    addPlace(place);\r\n  }\r\n\r\n  const onRowsPerPageChange = (value: number) => {\r\n    setTake(value);\r\n  }\r\n\r\n  const onPageChange = (value: number) => {\r\n    setPage(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLength(places.length);\r\n    const currentPage = (page * take);\r\n    setGroupedPlaces(groupData(places\r\n      .slice()\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n      .slice(currentPage, currentPage + take)))\r\n    \r\n    setNameOptions(placeOptions);\r\n  }, [places, page, take, placeOptions])\r\n\r\n  const dialogTitle = \"Update Visited Place\";\r\n  const nameDisplayText = 'Place';\r\n  const exposureDisplayText = \"Is Crowded?\";\r\n  const updateDataCallback = (data: CovidDataModel) => {\r\n    savePlace(data);\r\n  }\r\n  const deleteDataCallback = (id: string) => {\r\n    deletePlace(id);\r\n  }\r\n\r\n  const contextValues = {\r\n    dialogTitle, \r\n    nameDisplayText, \r\n    exposureDisplayText, \r\n    updateDataCallback, \r\n    deleteDataCallback,\r\n    nameOptions\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContext.Provider value={{...contextValues, mode: \"place\" }}>\r\n      {\r\n          places.length > 0 &&\r\n          <CovidDataTable \r\n            data={groupedPlaces} \r\n            pagination={{\r\n              length,\r\n              rowsPerPage: take,\r\n              page\r\n            }}\r\n            rowsPerPageCallback={onRowsPerPageChange}\r\n            pageCallback={onPageChange} />\r\n        }\r\n        {\r\n          places.length <= 0 &&\r\n          <CovidDataEmptyTable>\r\n            No interaction data present yet. Click on <b>ADD PLACE</b> to start collecting data.\r\n          </CovidDataEmptyTable>\r\n        }\r\n      </TableContext.Provider>\r\n      {\r\n        !loading &&\r\n        <CovidDataAddButton addDisplayText=\"Add Place\"\r\n          onAddClick={() => setOpen(true)} />\r\n      }\r\n      <CovidDataForm open={open}\r\n        dialogTitle=\"Add Visited Place\"\r\n        nameDisplayText=\"Place\"\r\n        exposureDisplayText=\"Is Crowded?\"\r\n        saveCallback={onPlaceAdd}\r\n        handleClose={() => setOpen(false)}\r\n        nameOptions={nameOptions} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VisitedPlaces;","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.scss';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport Header from './components/layout/Header';\r\nimport NotFound from './components/not-found/NotFound';\r\nimport Overview from './components/overview/Overview';\r\nimport SocialInteractions from './components/social-interactions/SocialInteractions';\r\nimport VisitedPlaces from './components/visited-places/VisitedPlaces';\r\nimport useSocialInteraction from './hooks/useSocialInteraction';\r\nimport useVisitedPlace from './hooks/useVisitedPlace';\r\n\r\nfunction App() {\r\n  const { fetchInteractions } = useSocialInteraction();\r\n  const { fetchPlaces } = useVisitedPlace();\r\n\r\n  useEffect(() => {\r\n    fetchInteractions();\r\n    fetchPlaces();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Header></Header>\r\n      <div className=\"route-container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard}></Route>\r\n          <Route path=\"/interactions\" component={SocialInteractions}></Route>\r\n          <Route path=\"/places\" component={VisitedPlaces}></Route>\r\n          <Route path=\"/overview\" component={Overview}></Route>\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { CustomAction } from './CustomAction';\r\nimport { DateRangeState, initialState } from './DateRangeState';\r\nimport { Reducer } from \"redux\";\r\nimport { UPDATE_RANGE } from './ActionTypes';\r\n\r\nconst reducer: Reducer<DateRangeState, CustomAction> = (\r\n  state: DateRangeState = initialState,\r\n  action: CustomAction\r\n) => {\r\n  switch(action.type) {\r\n    case UPDATE_RANGE:\r\n      return { ...state, dateRange: action.payload.dateRange };\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { CovidDataModel } from './../../models/CovidDataModel';\r\n\r\nexport interface SocialInteractionState {\r\n  loading?: boolean;\r\n  interactions: CovidDataModel[];\r\n}\r\n\r\nexport const initialState: SocialInteractionState = {\r\n  loading: true,\r\n  interactions: []\r\n}","import { CustomAction } from './CustomAction';\r\nimport { Reducer } from \"redux\";\r\nimport { initialState, SocialInteractionState } from './SocialInteractionState';\r\nimport * as actions from './ActionTypes';\r\n\r\nconst reducer: Reducer<SocialInteractionState, CustomAction> = \r\n  (state: SocialInteractionState = initialState,\r\n  action: CustomAction\r\n) => {\r\n  switch (action.type) {\r\n    case actions.FETCH_INTERACTIONS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        interactions: []\r\n      };\r\n    case actions.FETCH_INTERACTIONS:\r\n      return {\r\n        loading: false,\r\n        interactions: action.payload.interactions\r\n      }\r\n    case actions.ADD_INTERACTIONS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case actions.ADD_INTERACTION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        interactions: [...state.interactions, action.payload.interaction]\r\n      }\r\n    case actions.REMOVE_INTERACTION_REQUEST:\r\n      return { ...state, loading: true }\r\n    case actions.REMOVE_INTERACTION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        interactions: state.interactions.filter(i => i.id !== action.payload.interactionId)\r\n      }\r\n    case actions.UPDATE_INTERACTION_REQUEST:\r\n      return { ...state, loading: true }\r\n    case actions.UPDATE_INTERACTION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        interactions: state.interactions.map(i => i.id === action.payload.interaction.id ?\r\n          {\r\n            ...i,\r\n            name: action.payload.interaction.name,\r\n            date: action.payload.interaction.date,\r\n            hours: action.payload.interaction.hours,\r\n            isExposed: action.payload.interaction.isExposed\r\n          } : { ...i }\r\n        )\r\n      }\r\n    case actions.RESET_DATA_REQUEST:\r\n      return { ...state, loading: true }\r\n    case actions.RESET_DATA:\r\n      return { ...state, loading: false, interactions: [] }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { CovidDataModel } from './../../models/CovidDataModel';\r\n\r\nexport interface VisitedPlaceState {\r\n  loading?: boolean;\r\n  places: CovidDataModel[];\r\n}\r\n\r\nexport const initialState: VisitedPlaceState = {\r\n  loading: true,\r\n  places: []\r\n}","import { Reducer } from 'redux';\r\nimport { CustomAction } from \"./CustomAction\";\r\nimport { initialState, VisitedPlaceState } from \"./VisitedPlaceState\";\r\nimport * as actions from './ActionTypes';\r\n\r\nconst reducer: Reducer<VisitedPlaceState, CustomAction> = \r\n  (state: VisitedPlaceState = initialState,\r\n  action: CustomAction\r\n) => {\r\n  switch (action.type) {\r\n    case actions.FETCH_PLACES_REQUEST:\r\n      return {\r\n        loading: true,\r\n        places: []\r\n      };\r\n    case actions.FETCH_PLACES:\r\n      return {\r\n        loading: false,\r\n        places: action.payload.places\r\n      }\r\n    case actions.ADD_PLACE_REQUEST:\r\n      return { ...state, loading: true }\r\n    case actions.ADD_PLACE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        places: [...state.places, action.payload.place]\r\n      }\r\n      case actions.REMOVE_PLACE_REQUEST:\r\n        return { ...state, loading: true }\r\n      case actions.REMOVE_PLACE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: state.places.filter(i => i.id !== action.payload.placeId)\r\n        }\r\n      case actions.UPDATE_PLACE_REQUEST:\r\n        return { ...state, loading: true }\r\n      case actions.UPDATE_PLACE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          places: state.places.map(i => i.id === action.payload.place.id ?\r\n            {\r\n              ...i,\r\n              name: action.payload.place.name,\r\n              date: action.payload.place.date,\r\n              hours: action.payload.place.hours,\r\n              isExposed: action.payload.place.isExposed\r\n            } : { ...i }\r\n          )\r\n        }\r\n      case actions.RESET_DATA_REQUEST:\r\n        return { ...state, loading: true }\r\n      case actions.RESET_DATA:\r\n        return { ...state, loading: false, places: [] }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport DateRangeReducer from './DateRange/DateRangeReducer';\r\nimport SocialInteractionReducer from './SocialInteraction/SocialInteractionReducer';\r\nimport VisitedPlaceReducer from './VisitedPlaces/VisitedPlaceReducer';\r\n\r\nconst reducers = combineReducers({ \r\n  dateRangeReducer: DateRangeReducer,\r\n  socialInteractionReducer: SocialInteractionReducer,\r\n  visitedPlaceReducer: VisitedPlaceReducer\r\n});\r\n\r\nexport default function configureState() {\r\n  return createStore(reducers, applyMiddleware(thunk));\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport configureState from './store/store';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nReactDOM.render(\r\n  <ReduxProvider store={configureState()}>\r\n    <BrowserRouter>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <App />\r\n      </MuiPickersUtilsProvider>\r\n    </BrowserRouter>\r\n  </ReduxProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}